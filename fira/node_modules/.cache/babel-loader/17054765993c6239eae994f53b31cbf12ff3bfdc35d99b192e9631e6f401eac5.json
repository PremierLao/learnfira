{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16570\\\\Desktop\\\\\\u9879\\u76EE\\\\React\\u7B2C\\u4E00\\u4E2A\\u9879\\u76EE\\\\imooc-jira-master\\\\jira\\\\src\\\\screens\\\\project-list\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { SearchPanel } from \"./search-panel\";\nimport { List } from \"./list\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport qs from \"qs\";\nimport { cleanObject } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nexport const ProjectListScreen = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [param, setParam] = useState({\n    name: '',\n    personId: ''\n  });\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetch(`${apiUrl}/projects`).then(async response => {\n      console.log(apiUrl);\n      console.log(response);\n      if (response.ok) {\n        console.log(response.ok);\n        const data = await response.text();\n        console.log(1);\n        console.log(data);\n        setList(await response.json());\n        console.log(1);\n        console.log(response.json());\n      }\n    });\n  }, [param]);\n  useEffect(() => {\n    fetch(`${apiUrl}/users`).then(async response => {\n      if (response.ok) {\n        setUsers(await response.json());\n      }\n    });\n  }, []);\n  console.log(list);\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n      users: users,\n      param: param,\n      setParam: setParam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      users: users,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n_s(ProjectListScreen, \"0TXUHiph7H7klpA9Zdhj4+UoLx0=\");\n_c = ProjectListScreen;\nvar _c;\n$RefreshReg$(_c, \"ProjectListScreen\");","map":{"version":3,"names":["SearchPanel","List","useEffect","useState","React","qs","cleanObject","jsxDEV","_jsxDEV","apiUrl","process","env","REACT_APP_API_URL","ProjectListScreen","_s","users","setUsers","param","setParam","name","personId","list","setList","fetch","then","response","console","log","ok","data","text","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/16570/Desktop/项目/React第一个项目/imooc-jira-master/jira/src/screens/project-list/index.jsx"],"sourcesContent":["import {SearchPanel} from \"./search-panel\";\r\nimport {List} from \"./list\";\r\nimport {useEffect, useState} from \"react\";\r\nimport React from \"react\";\r\nimport qs from \"qs\";\r\nimport {cleanObject} from \"../../utils\";\r\n\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const ProjectListScreen = () => {\r\n    const [users,setUsers]=useState([])\r\n    const [param,setParam] = useState({\r\n        name:'',\r\n        personId:''\r\n    })\r\n    const [list,setList]=useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(`${apiUrl}/projects`).then(async response=>{\r\n            console.log(apiUrl)\r\n            console.log(response)\r\n            if(response.ok){\r\n                console.log(response.ok)\r\n                const data = await response.text();\r\n                console.log(1)\r\n                console.log(data);\r\n                setList(await response.json())\r\n                console.log(1)\r\n                console.log(response.json())\r\n            }})\r\n    }, [param]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${apiUrl}/users`).then(async response=>{\r\n            if(response.ok){\r\n                setUsers(await response.json())\r\n            }})\r\n    }, []);\r\n    console.log(list)\r\n    console.log(users)\r\n    return <div>\r\n        <SearchPanel users={users} param={param} setParam={setParam}/>\r\n        <List users={users} list={list}/>\r\n    </div>\r\n}"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,gBAAgB;AAC1C,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;AACnB,SAAQC,WAAW,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE5C,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACc,KAAK,EAACC,QAAQ,CAAC,GAAGf,QAAQ,CAAC;IAC9BgB,IAAI,EAAC,EAAE;IACPC,QAAQ,EAAC;EACb,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACnB,QAAQ,CAAC,EAAE,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZqB,KAAK,CAAE,GAAEd,MAAO,WAAU,CAAC,CAACe,IAAI,CAAC,MAAMC,QAAQ,IAAE;MAC7CC,OAAO,CAACC,GAAG,CAAClB,MAAM,CAAC;MACnBiB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAGA,QAAQ,CAACG,EAAE,EAAC;QACXF,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,EAAE,CAAC;QACxB,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCJ,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;QACdD,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;QACjBP,OAAO,CAAC,MAAMG,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;QAC9BL,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;QACdD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;MAChC;IAAC,CAAC,CAAC;EACX,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEXf,SAAS,CAAC,MAAM;IACZqB,KAAK,CAAE,GAAEd,MAAO,QAAO,CAAC,CAACe,IAAI,CAAC,MAAMC,QAAQ,IAAE;MAC1C,IAAGA,QAAQ,CAACG,EAAE,EAAC;QACXZ,QAAQ,CAAC,MAAMS,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;MACnC;IAAC,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACNL,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACjBK,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAClB,oBAAOP,OAAA;IAAAwB,QAAA,gBACHxB,OAAA,CAACR,WAAW;MAACe,KAAK,EAAEA,KAAM;MAACE,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9D5B,OAAA,CAACP,IAAI;MAACc,KAAK,EAAEA,KAAM;MAACM,IAAI,EAAEA;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AACV,CAAC;AAAAtB,EAAA,CAnCYD,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}